<?xml version="1.0" encoding="utf-8"?>
<common:AbstractPlugin xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:common="com.view.common.*"
					   xmlns:code="com.view.plugins.code.*"
					   width="990" height="570" creationComplete="createComplete(event)">
	<fx:Script>
		<![CDATA[
			import com.codetemplate.core.ICodeBlock;
			import com.codetemplate.manager.CodeTemplateID;
			import com.codetemplate.professional.FileCodeBlock;
			import com.codetemplate.professional.FunctionCodeBlock;
			import com.codetemplate.professional.ParamCodeBlock;
			import com.codetemplate.professional.ProfessionalCodeBlock;
			import com.codetemplate.professional.StatementCodeBlock;
			import com.file.FileProcessor;
			import com.file.data.FileData;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			/**创建完成 */
			private function createComplete(event:FlexEvent):void
			{
			}
			
			override public function get pluginID():String
			{
				return "CodeBlockPlugin";
			}
			
			override public function get pluginName():String
			{
				return "代码块";
			}
		
			/**代码快  */
			private var codeBlock:ICodeBlock;
			
			/**创建参数代码快  */
			private function createParamCode(event:MouseEvent):void
			{
				codeBlock = new ParamCodeBlock();
				for (var i:int = 0; i < 6; i++) 
				{
					codeBlock.encoder(["name" + i, "String", i>2?i.toString():(i>4?"null":"")]);
				}
				codeArea.text += codeBlock.codeBlock;
			}
			
			/**创建函数代码快  */
			private function createFunctionCode(event:MouseEvent):void
			{
				codeBlock = new FunctionCodeBlock();
				for (var i:int = 0; i < 6; i++) 
				{
					codeBlock.encoder(["x_lib", "private", "function" + i, "", "void", "i = " + i + ";"]);
				}
				codeArea.text += codeBlock.codeBlock;
			}
			
			private function createProfessionalCodeBlock($id:String, $param:Array):void
			{
				codeBlock = new ProfessionalCodeBlock($id);
				for (var i:int = 0; i < 6; i++) 
				{
					codeBlock.encoder($param);
				}
				codeArea.text += codeBlock.codeBlock;
			}
			
			/**创建导入代码快  */
			private function createImportCode(event:MouseEvent):void
			{
				createProfessionalCodeBlock(CodeTemplateID.IMPORT_ID, ["com.xlib.test"]);
			}
			
			/**创建继承代码快  */
			private function createExtendsCode(event:MouseEvent):void
			{
				createProfessionalCodeBlock(CodeTemplateID.EXTENDS_ID, ["Sprite"]);
			}
			
			/**创建接口代码快  */
			private function createInterfaceCode(event:MouseEvent):void
			{
				createProfessionalCodeBlock(CodeTemplateID.IMPLEMENTS_ID, ["IEventDispatcher"]);
			}
			
			/**创建声明代码快  */
			private function createStatementCode(event:MouseEvent):void
			{
				codeBlock = new StatementCodeBlock();
				for (var i:int = 0; i < 6; i++) 
				{
					codeBlock.encoder(["x_lib", "public", "name" + i, "Array", i > 3 ? "[]":""]);
				}
				codeArea.text += codeBlock.codeBlock;
			}
			
			/**创建类代码  */
			private function createClassCode($event:MouseEvent):void
			{
				codeBlock = new FileCodeBlock();
				var fcb:FileCodeBlock = codeBlock as FileCodeBlock;
				fcb.changeExtends("Sprite");
				fcb.changeModifiers("private");
				fcb.changePackage("com.test");
				fcb.changeType("class");
				
				fcb.addImport("com.cn.xlib.yoursister1");
				fcb.addImport("com.cn.xlib.yoursister2");
				fcb.addImport("com.cn.xlib.yoursister3");
				
				fcb.addImplements("IEventDispatch");
				fcb.addImplements("ICodeBlock");
				
				codeArea.text = fcb.codeBlock;
			}
			
			/**创建面板  */
			private var createView:CreateClassView;
			
			/**导出类  */
			private function exportClass(event:MouseEvent):void
			{
				if(!codeBlock) return;
				
				if(!createView)
				{
					createView = new CreateClassView();
					createView.codeBlock = codeBlock;
				}
				
				PopUpManager.addPopUp(createView, this, true);
				PopUpManager.centerPopUp(createView);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>

	<!--代码区域-->
	<mx:TextArea id="codeArea" x="22" y="24" width="770" height="496" editable="false"
				 mouseEnabled="false" selectable="false" textAlign="left" wordWrap="false"/>
	
	<!--操作区-->
	<s:Button x="820" y="47" width="143" label="添加参数代码" click="createParamCode(event)"/>
	<s:Button x="820" y="80" width="143" label="添加函数代码" click="createFunctionCode(event)"/>
	<s:Button x="820" y="113" width="143" label="添加导入代码" click="createImportCode(event)"/>
	<s:Button x="822" y="146" width="143" label="添加继承代码" click="createExtendsCode(event)"/>
	<s:Button x="822" y="179" width="143" label="添加接口代码" click="createInterfaceCode(event)"/>
	<s:Button x="822" y="212" width="143" label="添加声明代码" click="createStatementCode(event)"/>
	<s:Button x="823" y="245" width="143" label="添加文件代码" click="createClassCode(event)"/>
	<s:Button x="824" y="503" label="导出" click="exportClass(event)"/>
	
	<!--警告区域-->
	<s:Label x="22" y="528" width="770" height="30" color="#FA0404" fontSize="16" fontWeight="bold"
			 text="点击导出可导出具体类，可在导出面板修改类名包明等信息" textAlign="center" verticalAlign="middle"/>
</common:AbstractPlugin>
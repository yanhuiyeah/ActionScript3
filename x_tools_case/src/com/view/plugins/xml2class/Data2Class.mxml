<?xml version="1.0" encoding="utf-8"?>
<common:AbstractPlugin xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:common="com.view.common.*"
					   backgroundColor="#023126" creationComplete="createComplete(event)"  width="990" height="570">
	<fx:Script>
		<![CDATA[
			import com.file.FileProcessor;
			import com.file.data.FileData;
			import com.view.plugins.xml2class.holder.ExportHelper;
			
			import mx.controls.Alert;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.DragManager;
			
			/*  创建完成*/
			private function createComplete($e:FlexEvent):void
			{
				loadURLTF.text = File.desktopDirectory.url;
			}
			
			public function get parseType():String{return "*";}
			
			public function formatResult():String{return null;}
			
			public function export():String
			{
				return parsedText;
			}
			
			public function get class_Name():String
			{
				return exportNameTF.text;
			}
			
			public function set class_Name($value:String):void
			{
				exportNameTF.text = $value;
			}
			
			public function get packageStructure():String
			{
				return packageTF.text;
			}
			
			public function set packageStructure($value:String):void
			{
				packageTF.text = $value;
			}
			
			public function get parsedText():String
			{
				return previewArea.text;
			}
			
			public function set parsedText($value:String):void
			{
				previewArea.text = $value;
			}
			
			public function set fileName($value:String):void
			{
				fileNameTF.text = $value;
			}
			
			public function set fileURL($value:String):void
			{
				loadURLTF.text = $value;
			}
			
			public function set canExport($value:Boolean):void
			{
				exportBtn.enabled = $value;
			}
			
			
			//================================================
			/*  导入文件*/
			private function loadFile($e:MouseEvent):void
			{
//				FileProcessor.instance.open(setConfig, FileProcessor.ONE_FILE, );
			}
			
			/* 导出类 */
			private function exportClass($e:MouseEvent):void
			{
				ExportHelper.instance.exporter.export();
			}
			
			/* 更改包名或者类名 */
			private function setPackageAndName(event:Event = null):void
			{
//				ExportHelper.instance.exporter.packageStructure = packageTF.text;
//				ExportHelper.instance.exporter.class_Name = exportNameTF.text;
				ExportHelper.instance.exporter.formatResult();
				parsedText = ExportHelper.instance.exporter.parsedText;
			}
			
			/* 更改后缀名 */
			private function changeSuffix(event:Event):void
			{
				ExportHelper.setExporType(suffixComb.selectedIndex);
			}
			
			/**设置配置  */
			private function setConfig($vect:Vector.<FileData>):void
			{
				var fd:FileData = $vect[0];
				
				fileNameTF.text =  fd.name;
				loadURLTF.text = fd.nativePath;
				var className:String = fd.name;
				if(fd.extension != null)
				{
					className = className.replace("." + fd.extension, "");
				}
				exportNameTF.text = className;
			}
			
			override public function get pluginID():String
			{
				return "data2Class";
			}
			
			override public function get pluginName():String
			{
				return "配置文件生成类";
			}
			
			/**文件拖拽完成  */
			private function fileDragComplete(event:NativeDragEvent):void
			{
				var clipboard:Clipboard = event.clipboard;
				if(!clipboard.hasFormat(ClipboardFormats.FILE_LIST_FORMAT))
				{
					Alert.show("你丫别瞎选，文件中不包含文本数据！");
					return;
				}
				
				var count:int = 0;
				var arr:Array = clipboard.getData(ClipboardFormats.FILE_LIST_FORMAT) as Array;
				var f:File;
				for each(f in arr)
				{
					if(f.extension.toLowerCase() == "xml")
					{
						count++;
					}
					if(count > 1)
					{
						Alert.show("不支持多选谢谢!");
						return;
					}
				}
				
				if(!f)
				{
					Alert.show("请选择正确的格式");
				}
				
				var fs:FileStream = new FileStream();
				fs.open(f, FileMode.READ);
				var fd:FileData = new FileData();
				fd.extension = f.extension;
				fd.name = f.name;
				var bytes:ByteArray = new ByteArray();
				fs.readBytes(bytes);
				fd.data = bytes;
				fd.nativePath = f.nativePath;
				setConfig(new <FileData>[fd]);
				fs.close();
			}
			
			/**文件拖入区域  */
			private function fileDragEnter(event:NativeDragEvent):void
			{
				NativeDragManager.acceptDragDrop(dragArea);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button x="662" y="13" width="92" label="导入文件" click="loadFile(event)"/>
	<s:Label x="11" y="14" width="85" height="22" chromeColor="#110F0F" color="#EEE0E0"
			 fontFamily="中易黑体" fontSize="16" text="文件路径:" verticalAlign="middle"/>
	<s:TextInput id="loadURLTF" x="88" y="13" width="560" fontFamily="中易黑体" fontSize="14"/>
	<s:Label x="7" y="42" width="85" height="22" chromeColor="#110F0F" color="#EFE1E1"
			 fontFamily="中易黑体" fontSize="16" text="文件名称:" verticalAlign="middle"/>
	<s:TextInput id="fileNameTF" x="89" y="43" width="374" fontFamily="中易黑体" fontSize="14" mouseEnabled="false" selectable="false" editable="false"/>
	<s:Label x="7" y="91" width="85" height="22" chromeColor="#110F0F" color="#E4DDDD"
			 fontFamily="中易黑体" fontSize="16" text="导出类包:" verticalAlign="middle"/>
	<s:TextInput id="packageTF" x="89" y="92" width="559" change="setPackageAndName(event)"
				 fontFamily="中易黑体" fontSize="14" toolTip="请在此处输入需要的包结构"/>
	<s:Label x="5" y="122" width="85" height="22" chromeColor="#4E0B0B" color="#F6EDED"
			 fontFamily="中易黑体" fontSize="16" text="导出类名:" verticalAlign="middle"/>
	<s:TextInput id="exportNameTF" x="90" y="123" width="373" fontFamily="中易黑体" fontSize="14" change="setPackageAndName(event)"/>
	<s:Label x="6" y="176" width="85" height="22" chromeColor="#4E0B0B" color="#F6EDED"
			 fontFamily="中易黑体" fontSize="16" text="预览：" verticalAlign="middle"/>
	<mx:TextArea id="previewArea" x="86" y="178" width="876" height="365" editable="false"/>
	<s:Button id="exportBtn" x="668" y="124" width="86" label="导出" click="exportClass(event)" enabled="false"/>
	<mx:ComboBox id="suffixComb" x="484" y="124" width="164" chromeColor="#F8F2F2" change="changeSuffix(event)"
				 dataProvider="{ExportHelper.getExportTypeList()}" fontFamily="中易黑体" fontSize="14"/>
	<s:TextArea id="dragArea" x="774" y="10" width="190" height="135" editable="false" fontFamily="中易黑体"
				fontSize="20" fontWeight="normal" paddingBottom="10" paddingLeft="10"
				paddingRight="10" paddingTop="10" text="可将文件直接拖拽到此处" textAlign="center" selectable="false"
				verticalAlign="middle" nativeDragDrop="fileDragComplete(event)" nativeDragEnter="fileDragEnter(event)"/>
</common:AbstractPlugin>
